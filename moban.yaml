# Clash Meta 全量配置模板（含订阅、策略组、规则集、DNS等）

# ==================== 通用设置 ====================
port: 7890
socks-port: 7891
redir-port: 7892
tproxy-port: 7893
mixed-port: 7890
allow-lan: true
mode: rule
log-level: info
external-controller: 127.0.0.1:9090
secret: ""
bind-address: "*"
unified-delay: true
ipv6: false

# ==================== DNS 设置 ====================
dns:
  enable: true
  ipv6: false
  enhanced-mode: fake-ip
  fake-ip-filter:
    - '*.lan'
    - 'localhost'
  nameserver:
    - https://doh.pub/dns-query
    - https://dns.alidns.com/dns-query
  fallback:
    - tls://1.1.1.1:853
    - tls://8.8.4.4:853
  fallback-filter:
    geoip: true
    geoip-code: CN

# ==================== 订阅节点（OpenClash 会自动插入） ====================
proxy-providers:
  Airport:
    type: http
    url: "__SUBSCRIPTION_URL__"  # ← 这里由 OpenClash 动态替换
    interval: 86400
    path: ./proxy_provider/Airport.yaml
    health-check:
      enable: true
      interval: 600
      url: http://www.gstatic.com/generate_204

# ==================== 策略组 ====================
proxy-groups:
  - {name: ♻️ 自动选择, type: url-test, use: [Airport], url: "http://www.gstatic.com/generate_204", interval: 300}
  - {name: 📺 NETFLIX, type: select, proxies: [♻️ 自动选择, DIRECT]}
  - {name: 📰 国外媒体, type: select, proxies: [♻️ 自动选择, DIRECT]}
  - {name: 🐟 漏网之鱼, type: select, proxies: [♻️ 自动选择, DIRECT]}
  - {name: 🌏 全球直连, type: select, proxies: [DIRECT, ♻️ 自动选择]}

# 区域自动策略组（根据你提供的结构）
  - {name: auto 🇸🇬 新加坡, type: url-test, include-all: true, filter: "(?i)(新加坡|狮城|Singapore|SG)", interval: 300, tolerance: 20}
  - {name: auto 🇭🇰 香港, type: url-test, include-all: true, filter: "(?i)(香港|Hong Kong|HK)", interval: 300, tolerance: 20}
  - {name: auto 🇯🇵 日本, type: url-test, include-all: true, filter: "(?i)(日本|JP|Japan)", interval: 300, tolerance: 20}
  - {name: auto 🇺🇸 美国, type: url-test, include-all: true, filter: "(?i)(美国|US|United States|America)", interval: 300, tolerance: 20}
  - {name: auto 🇹🇼 台湾, type: url-test, include-all: true, filter: "(?i)(台湾|TW|Taiwan)", interval: 300, tolerance: 20}
  - {name: 手动 🧊 其他冷门地区, type: select, include-all: true, filter: "^(?!(.*新加坡|.*香港|.*日本|.*美国|.*台湾)).*$"}

# 📱 应用策略组（以 OpenAI 为例，其它同理）
  - {name: 📱 openai 应用, type: select, proxies: [auto 🇯🇵 日本, auto 🇺🇸 美国, auto 🇸🇬 新加坡, auto 🇭🇰 香港, auto 🇹🇼 台湾, 手动 🧊 其他冷门地区, DIRECT]}
  - {name: 📱 youtube 应用, type: select, proxies: [auto 🇯🇵 日本, auto 🇺🇸 美国, auto 🇸🇬 新加坡, auto 🇭🇰 香港, auto 🇹🇼 台湾, 手动 🧊 其他冷门地区, DIRECT]}
  - {name: 📱 telegram 应用, type: select, proxies: [auto 🇯🇵 日本, auto 🇺🇸 美国, auto 🇸🇬 新加坡, auto 🇭🇰 香港, auto 🇹🇼 台湾, 手动 🧊 其他冷门地区, DIRECT]}
  - {name: 📱 netflix 应用, type: select, proxies: [auto 🇯🇵 日本, auto 🇺🇸 美国, auto 🇸🇬 新加坡, auto 🇭🇰 香港, auto 🇹🇼 台湾, 手动 🧊 其他冷门地区, DIRECT]}

# ==================== 规则集定义 ====================
rule-anchor:
  ip: &ip {type: http, interval: 86400, behavior: ipcidr, format: mrs}
  domain: &domain {type: http, interval: 86400, behavior: domain, format: mrs}
  class: &class {type: http, interval: 86400, behavior: classical, format: text}

rule-providers:
  netflix_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/netflix.mrs"}
  openai_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/openai.mrs"}
  telegram_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/telegram.mrs"}
  gfw_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/gfw.mrs"}
  cn_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/cn.mrs"}
  cn_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/cn.mrs"}

# ==================== 分流规则 ====================
rules:
  - DOMAIN-SUFFIX,local,DIRECT
  - RULE-SET,netflix_domain,📱 netflix 应用
  - RULE-SET,openai_domain,📱 openai 应用
  - RULE-SET,telegram_domain,📱 telegram 应用
  - RULE-SET,gfw_domain,♻️ 自动选择
  - RULE-SET,cn_domain,DIRECT
  - RULE-SET,cn_ip,DIRECT
  - MATCH,🐟 漏网之鱼
